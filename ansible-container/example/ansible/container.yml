version: "1"
services:
  django:
    image: centos:7
    expose:
      - "8080"
    working_dir: '/django'
    links:
      - postgresql
    user: 'django'
    command: ['/usr/bin/dumb-init', '/venv/bin/gunicorn', '-w', '2', '-b', '0.0.0.0:8080', 'example.wsgi:application']
    dev_overrides:
      command: ['/usr/bin/dumb-init', '/venv/bin/python', 'manage.py', 'runserver', '0.0.0.0:8080']
      volumes:
        - "$PWD:/django"
    options:
      kube:
        runAsUser: 1000
      openshift:
        runAsUser: 1000
  static:
    image: centos:7
    ports:
      - "80:8080"
    user: 'nginx'
    links:
      - django
    command: ['/usr/bin/dumb-init', 'nginx', '-c', '/etc/nginx/nginx.conf']
    dev_overrides:
      ports: []
      command: 'bin/false'
    options:
      kube:
        runAsUser: 997
      openshift:
        runAsUser: 997
  postgresql:
    image: postgres:9.4
    expose:
      - "5432"
    volumes:
      - '/var/lib/postgresql/data'
    environment:
      POSTGRES_USER: 'example'
      POSTGRES_PASSWORD: 'sesame'
      POSTGRES_DB: 'example'
  gulp:
    image: centos:7
    user: 'node'
    links:
      - django
    command: /bin/false
    dev_overrides:
      working_dir: '/node'
      command: ['/usr/bin/dumb-init', '/node_modules/.bin/gulp']
      ports:
        - "80:8080"
      volumes:
        - "$PWD:/node"
    options:
      kube:
        state: absent
      openshift:
        state: absent

registries: {}

